FROM nvcr.io/nvidia/l4t-base:r32.4.3

WORKDIR /root
RUN ["/bin/bash"]

# package install 과정에서의 interactive 모들 비활성화 
RUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
RUN apt-get install -y -q

# set cuda env 
# RUN echo '/usr/local/cuda/lib64' >> /etc/ld.so.conf.d/nvidia-tegra.conf && ldconfig 

# 3rd party library for opencv build
RUN apt update && apt install -y --no-install-recommends \
        build-essential cmake git unzip pkg-config \
        libjpeg-dev libpng-dev libtiff-dev \
        libavcodec-dev libavformat-dev libswscale-dev \
        libgtk2.0-dev libcanberra-gtk* python3-pip \
        libxvidcore-dev libx264-dev libgtk-3-dev \
        libtbb2 libtbb-dev libdc1394-22-dev \
        libv4l-dev v4l-utils \
        libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev \
        libavresample-dev libvorbis-dev libxine2-dev \
        libfaac-dev libmp3lame-dev libtheora-dev \
        libopencore-amrnb-dev libopencore-amrwb-dev \
        libopenblas-dev libatlas-base-dev libblas-dev \
        liblapack-dev libeigen3-dev gfortran \
        libhdf5-dev protobuf-compiler \
        libprotobuf-dev libgoogle-glog-dev libgflags-dev sudo

# build opencv 
RUN wget https://github.com/JetsonHacksNano/buildOpenCV/blob/master/buildOpenCV.sh && \
    bash ./buildOpenCV.sh
    
    git clone https://github.com/JetsonHacksNano/buildOpenCV
    ./buildOpenCV.sh |& tee openCV_build.log

# Jetson usage 확인용 tool 설치 
# RUN pip3 install setuptools jetson-stats
